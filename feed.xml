<?xml version="1.0" encoding="UTF-8"?>

    <feed xmlns="http://www.w3.org/2005/Atom">
        <title>Adnane Belmadiaf's Blog</title>
        
        <link rel="alternate" href="http://daker.me/" />
        <link rel="self" href="http://daker.me/feed.xml" type="application/atom+xml" />
        <id>http://daker.me/</id>
        <updated>2013-07-31T02:04:12Z</updated>
        
        <author>
            <name>Adnane Belmadiaf</name>
            <email>daker@ubuntu.com</email>
            <uri>http://daker.me/</uri>
        </author>
        
        
            <entry>
                <title>Why Stylus fit better my needs</title>
                <link rel="alternate" href="http://daker.me/2013/07/why-stylus-fit-better-my-needs.html" type="text/html" />
                <id>http://daker.me/2013/07/why-stylus-fit-better-my-needs.html</id>
                <updated>2013-07-24T14:25:00Z</updated>
                
                <summary type="html">Stylus is an expressive, dynamic, robust CSS pre-processor built on top of Node.js. LESS and Sass are both great, they try to stay as close as the original CSS syntax as possible to minimize the impact of having to learn a new language, but for me someone who cares about simplicity and readability, the syntax becomes an important part of the language or the framework.</summary>
                <content type="html">&lt;p&gt;Stylus is an expressive, dynamic, robust CSS pre-processor built on top of Node.js. LESS and Sass are both great, they try to stay as close as the original CSS syntax as possible to minimize the impact of having to learn a new language, but for me someone who cares about simplicity and readability, the syntax becomes an important part of the language or the framework.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/stylus.png&#34; alt=&#34;Stylus&#34;&gt;&lt;/p&gt;
&lt;h1&gt;Installation&lt;/h1&gt;&lt;h2&gt;Ubuntu&lt;/h2&gt;&lt;pre lang=&#34;sh&#34;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:chris-lea/node.js
$ sudo apt-get update
$ sudo apt-get install nodejs
$ sudo npm install -g stylus
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Mac OSX&lt;/h2&gt;&lt;pre lang=&#34;sh&#34;&gt;&lt;code&gt;$ brew install node
$ curl https://npmjs.org/install.sh | sh
$ npm install -g stylus
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;For me as someone who comes from a Python world, Stylus syntax strips away all the colons, semicolons, brackets and most parentheses from regular CSS script, which become like a python syntax, easy and dead simple.&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;#container
    width 980px
    margin 0 auto
    background #ccc
    font 12px Helvetica, Arial, sans-serif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;which produce the following CSS code&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;#container {
    width: 980px;
    margin: 0 auto;
    background: #ccc;
    font: 12px Helvetica, Arial, sans-serif;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;Variables&lt;/h1&gt;
&lt;p&gt;Defining variables is simple, you don&amp;#39;t need to use $ or @ like in Sass or LESS, the good part is that Stylus also support the $ so if you are coming from Sass your variables will remain functionnal.&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;font-size = 14px
color = #ff0000

body
    font-family  Arial, sans-serif
    font-size font-size
    color color
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once compiled, you&amp;#39;ll get the following CSS code&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;body {
    font-family: Arial, sans-serif;
    font-size: 14px;
    color: #f00;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Did you noticed something ? the color has been compressed automatically.&lt;/p&gt;
&lt;h1&gt;Mixins&lt;/h1&gt;
&lt;p&gt;Mixins are similar to functions, but used in a different way, a good example of a mixin is the border-radius property&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;border-radius(n)
    -webkit-border-radius n
    -moz-border-radius n
    -ms-border-radius n
    -o-border-radius n
    border-radius n

#btn
    border-radius(3px) /* or just border-radius 3px */
    background #e9573f
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The compiled version will be&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;#btn {
    -webkit-border-radius: 3px;
    -moz-border-radius: 3px;
    -ms-border-radius: 3px;
    -o-border-radius: 3px;
    border-radius: 3px;
    background: #e9573f;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Handy for vendor-prefixed properties.&lt;/p&gt;
&lt;h1&gt;Iteration&lt;/h1&gt;
&lt;p&gt;Stylus gives you the ablity to iterate expressions via for/in&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;ul
    for row in 1 2 3 4 5
        li:nth-child({row})
            height: 10px * row
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The CSS code will be&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;ul li:nth-child(1) {
    height: 10px;
}

ul li:nth-child(2) {
    height: 20px;
}

ul li:nth-child(3) {
    height: 30px;
}

ul li:nth-child(4) {
    height: 40px;
}

ul li:nth-child(5) {
    height: 50px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;Inheritance&lt;/h1&gt;
&lt;p&gt;Stylus provides a good inheritance mecanism&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;.notice
    padding 10px
    border 1px solid #eee

.warning
    @extend .notice
    color #e2e21e
&lt;/code&gt;&lt;/pre&gt;&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;.notice,
.warning {
    padding: 10px;
    border: 1px solid #eee;
}

.warning {
    color: #e2e21e;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;Error Reporting&lt;/h1&gt;
&lt;p&gt;Stylus has fantastic error reporting built-in for syntax, parse, and evaluation errorsâ€”complete with stack traces, line numbers, and filenames.&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;.message
    padding 10px
    border 1px solid [#ccc]
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The output will look something like this&lt;/p&gt;
&lt;pre lang=&#34;sh&#34;&gt;&lt;code&gt;$ stylus buggy-demo.styl

/usr/lib/node_modules/stylus/bin/stylus:530
              throw err;
                    ^
Error: t.styl:3
   1| .message
   2|     padding 10px
 &amp;gt; 3|     border 1px solid [#ccc]

cannot perform solid[(#ccc)]
    at &amp;#34;.message&amp;#34; (t.styl:NaN)
    at Ident.Node.operate (/usr/lib/node_modules/stylus/lib/nodes/node.js:189:13)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Stylus provides a detailed stack trace much like you would find in any decent language.&lt;/p&gt;
&lt;h1&gt;Literal CSS&lt;/h1&gt;
&lt;p&gt;This the best part of Stylus, you can still use your CSS code using &lt;code&gt;@css&lt;/code&gt; and it will work, how that will help you in your workflow? you&amp;#39;ll be able to integrate Stylus progressivly in your project&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;@css {
    body {
        font-family: Arial, sans-serif;
        font-size: 14px;
        color: #f00;
    }
}

#container
    width 980px
    margin 0 auto
    background #ccc
    font 12px Helvetica, Arial, sans-serif
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the output will be&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;body {
    font-family: Arial, sans-serif;
    font-size: 14px;
    color: #f00;
}

#container {
    width: 980px;
    margin: 0 auto;
    background: #ccc;
    font: 12px Helvetica, Arial, sans-serif;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Stylus is certainly worth a try, and if you are a Compass guy, Stylus has an extension called &lt;a href=&#34;https://github.com/visionmedia/nib&#34;&gt;nib&lt;/a&gt; that provides robust cross-browser CSS3 mixins. Sure there is more you can learn about Stylus and there is &lt;a href=&#34;http://learnboost.github.io/stylus/&#34;&gt;docs&lt;/a&gt; for that.&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>Testing your responsive design with PhantomJS</title>
                <link rel="alternate" href="http://daker.me/2013/07/testing-your-responsive-design-with-phantomjs.html" type="text/html" />
                <id>http://daker.me/2013/07/testing-your-responsive-design-with-phantomjs.html</id>
                <updated>2013-07-13T14:30:00Z</updated>
                
                <summary type="html">User testing is an important aspect of the development process of any web project, that&amp;#39;s why headless browsers can be great for automating and testing web pages programmatically, PhantomJS is one of many headless browsers basicaly a WebKit browser with JavaScript API, which means that the rendered web pages are never actually displayed, just because it is a browser but without a GUI.</summary>
                <content type="html">&lt;p&gt;User testing is an important aspect of the development process of any web project, that&amp;#39;s why headless browsers can be great for automating and testing web pages programmatically, PhantomJS is one of many headless browsers basicaly a WebKit browser with JavaScript API, which means that the rendered web pages are never actually displayed, just because it is a browser but without a GUI.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/phantomjs.png&#34; alt=&#34;PhantomJS&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;&lt;h3&gt;Ubuntu&lt;/h3&gt;&lt;pre lang=&#34;sh&#34;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:chris-lea/node.js
$ sudo apt-get update
$ sudo apt-get install nodejs
$ sudo npm install -g phantomjs
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Mac OSX&lt;/h3&gt;&lt;pre lang=&#34;sh&#34;&gt;&lt;code&gt;$ brew install node
$ curl https://npmjs.org/install.sh | sh
$ npm install -g phantomjs
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now you should now have PhantomJS installed, you check that by running :&lt;br&gt;
&lt;code&gt;$ phantomjs --version&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;PhantomJS is very powerfull tool, it lets you manipulate pages, access page settings(prevent loading images, prevent running Javascript), accessing the filesystem, running Javascript and you can capture webpage, it can be coupled with other testing frameworks(like QUnitJS)&lt;/p&gt;
&lt;h2&gt;Testing your responsive design&lt;/h2&gt;
&lt;p&gt;PhantomJS can capture the content of any webpage in PNG, JPEG, GIF or PDF file, it let&amp;#39;s you set the viewport size, the zoom factor, the user-agent and more usefull stuff.&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;/*
    requires: phantomjs, async
    usage: phantomjs capture.js
*/
var async = require(&amp;#39;async&amp;#39;),
    sizes = [
        [320, 480],
        [320, 568],
        [600, 1024],
        [1024, 768],
        [1280, 800],
        [1440, 900]
    ];

function capture(sizes, callback) {
    var page = require(&amp;#39;webpage&amp;#39;).create();
    page.viewportSize = {
        width: sizes[0],
        height: sizes[1]
    };
    page.zoomFactor = 1;
    page.open(&amp;#39;http://daker.me&amp;#39;, function (status) {
        var filename = sizes[0] + &amp;#39;x&amp;#39; + sizes[1] + &amp;#39;.png&amp;#39;;
        page.render(&amp;#39;./screenshots/&amp;#39; + filename);
        page.close();
        callback.apply();
    });
}

async.eachSeries(sizes, capture, function (e) {
    if (e) console.log(e);
    console.log(&amp;#39;done!&amp;#39;);
    phantom.exit();
});
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I have coupled PhantomJS with &lt;a href=&#34;https://github.com/caolan/async&#34;&gt;async.js&lt;/a&gt; so i can take multiple screenshots, now all you need to do is to run &lt;code&gt;phantomjs capture.js&lt;/code&gt; from the commandline, the good part is that PhantomJS will capture all the page not only the viewport.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/phantomjs-demo.png&#34; alt=&#34;Responsive Design Screenshots&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UPDATE 14/07/2013&lt;/strong&gt; : The script also works with &lt;a href=&#34;http://slimerjs.org/&#34;&gt;SlimerJS&lt;/a&gt;, SlimerJS is similar to PhantomJs, except that it runs Gecko, the browser engine of Mozilla Firefox, instead of Webkit.&lt;/p&gt;

&lt;p&gt;&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p&gt;Testing your &lt;a href=&#34;https://twitter.com/search?q=%23responsivedesign&amp;amp;src=hash&#34;&gt;#responsivedesign&lt;/a&gt;? Take this script for PhantomJS and run it with SlimerJS &lt;a href=&#34;http://t.co/wyqiIJustE&#34;&gt;&lt;a href=&#34;http://t.co/wyqiIJustE&#34;&gt;http://t.co/wyqiIJustE&lt;/a&gt;&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/AdnaneBelmadiaf&#34;&gt;@AdnaneBelmadiaf&lt;/a&gt;&lt;/p&gt;&amp;mdash; SlimerJS (@slimerjs) &lt;a href=&#34;https://twitter.com/slimerjs/statuses/356172141277888513&#34;&gt;July 13, 2013&lt;/a&gt;&lt;/blockquote&gt;&lt;br&gt;
&lt;script async src=&#34;http://daker.me/platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>Understanding CSS3 box-sizing property</title>
                <link rel="alternate" href="http://daker.me/2013/07/understanding-css3-box-sizing-property.html" type="text/html" />
                <id>http://daker.me/2013/07/understanding-css3-box-sizing-property.html</id>
                <updated>2013-07-10T16:25:00Z</updated>
                
                <summary type="html">Each HTML element is represented as a rectangular box, it consists of margins, borders, padding, and the actual content. The default CSS box model used to calculate widths and heights of elements, the width/height of an element gives the width/height of the content of the box, excluding padding and border.</summary>
                <content type="html">&lt;p&gt;Each HTML element is represented as a rectangular box, it consists of margins, borders, padding, and the actual content. The default CSS box model used to calculate widths and heights of elements, the width/height of an element gives the width/height of the content of the box, excluding padding and border.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/box-model.png&#34; alt=&#34;Box Model&#34;&gt;&lt;/p&gt;

&lt;p&gt;and they are calculated like this:&lt;/p&gt;

&lt;p&gt;&lt;code&gt;Width = width + padding-left + padding-right + border-left + border-right&lt;/code&gt;&lt;br&gt;
&lt;code&gt;Height = height + padding-top + padding-bottom + border-top + border-bottom&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;so if we take this as an example :&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;.box {
    width: 300px;
    padding: 10px;
    border: 5px solid #e9573f;
    margin: 10px;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the width of the rendred box will be calculated like this :&lt;/p&gt;

&lt;p&gt;&lt;code&gt;300px (width) + 20px (left + right padding) + 10px (left + right border) + 20px (left + right margin) = 350px&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;which will give us a box with 350px width, so in this case you have to change the width of the box to 270px, and this is where the box-sizing property comes to the rescue.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;box-sizing&lt;/code&gt; allows you to switch box models :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;content-box: This is the default style as specified by the W3C. The width and height properties are measured including only the content, but not the border, margin, or padding.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;border-box: The width and height properties include the padding and border, but not the margin. This is the box model used by IE when the document is in Quirks mode.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;padding-box : The width and height properties include the padding size, and do not include the border or margin (only in Firefox).&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/ZtLL8/1/embedded/result,css,html&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;To save you time, you can apply it using the universal selector&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;* {
    -moz-box-sizing: border-box;
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;&lt;code&gt;box-sizing&lt;/code&gt; is pretty well supported but partially and i mean that only Firefox support the three models, the others browsers only support content-box and border-box since the padding-box value has been added to the spec very recently.&lt;/p&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;21.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;26.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;15.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;&gt;&lt;div&gt;8.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34;&gt;&lt;div&gt;5.1&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;
</content>
            </entry>
        
            <entry>
                <title>How to make sticky elements using position sticky</title>
                <link rel="alternate" href="http://daker.me/2013/07/how-to-make-sticky-elements-using-position-sticky.html" type="text/html" />
                <id>http://daker.me/2013/07/how-to-make-sticky-elements-using-position-sticky.html</id>
                <updated>2013-07-04T01:05:00Z</updated>
                
                <summary type="html">&lt;code&gt;position: sticky&lt;/code&gt; is a new CSS property that has &lt;a href=&#34;http://trac.webkit.org/changeset/126774&#34;&gt;landed&lt;/a&gt; in Webkit last year which will allow elements to stick to the viewport edge as you scroll past, unfortunately this hasn&amp;#39;t been standardized yet but discussions are still going on.</summary>
                <content type="html">&lt;p&gt;&lt;code&gt;position: sticky&lt;/code&gt; is a new CSS property that has &lt;a href=&#34;http://trac.webkit.org/changeset/126774&#34;&gt;landed&lt;/a&gt; in Webkit last year which will allow elements to stick to the viewport edge as you scroll past, unfortunately this hasn&amp;#39;t been standardized yet but discussions are still going on.&lt;/p&gt;
&lt;h1&gt;How does it work ?&lt;/h1&gt;
&lt;p&gt;By simply adding &lt;code&gt;position: sticky&lt;/code&gt;, you can tell an element to be &lt;code&gt;position: relative&lt;/code&gt; until the user scrolls the item (or its parent) to be for ex 10px from the top, the actual way to achieve the same behaviour is by using Javascript :&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsbin.com/omanut/2&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;and this is the CSS way:&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;.sticky {
    position: -webkit-sticky;
    position: -moz-sticky;
    position: -ms-sticky;
    position: -o-sticky;
    position: sticky;
    top: 10px;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h1&gt;How to enable it ?&lt;/h1&gt;
&lt;p&gt;The &lt;code&gt;sticky&lt;/code&gt; value is still an experimental feature in Webkit, so you need to enable it in &lt;code&gt;chrome://flags&lt;/code&gt;, just Ctrl+F &amp;quot;Enable experimental WebKit features&amp;quot;, then click enable.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/css-sticky.png&#34; alt=&#34;chrome://flags&#34;&gt;&lt;/p&gt;
&lt;h1&gt;Demo&lt;/h1&gt;
&lt;p&gt;I have made a simple alphabetical contact list with sticky headers using HTML and CSS only!&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/daker/ecpTw/embedded/result,css,html&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;23.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;

&lt;p&gt;One thing you should remember is that this feature is just a proposal that can be standardized or not.&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>Grunt.js takes your workflow to the next level</title>
                <link rel="alternate" href="http://daker.me/2013/06/gruntjs-takes-your-workflow-to-the-next-level.html" type="text/html" />
                <id>http://daker.me/2013/06/gruntjs-takes-your-workflow-to-the-next-level.html</id>
                <updated>2013-06-22T18:15:00Z</updated>
                
                <summary type="html">&lt;a href=&#34;http://gruntjs.com&#34;&gt;Grunt.js&lt;/a&gt; is a powerful task-based command line tool written in JavaScript on top of Node.js, and there are a number of grunt plugins that make it easy to set up common tasks, most common ones are concatenating files, linting, testing and minification.</summary>
                <content type="html">&lt;p&gt;&lt;a href=&#34;http://gruntjs.com&#34;&gt;Grunt.js&lt;/a&gt; is a powerful task-based command line tool written in JavaScript on top of Node.js, and there are a number of grunt plugins that make it easy to set up common tasks, most common ones are concatenating files, linting, testing and minification.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/grunt-logo.png&#34; alt=&#34;Grunt logo&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Installation&lt;/h2&gt;&lt;h3&gt;Ubuntu&lt;/h3&gt;&lt;pre lang=&#34;sh&#34;&gt;&lt;code&gt;$ sudo add-apt-repository ppa:chris-lea/node.js
$ sudo apt-get update
$ sudo apt-get install nodejs
$ sudo npm install -g grunt-cli
$ sudo npm install grunt --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;h3&gt;Mac OSX&lt;/h3&gt;&lt;pre lang=&#34;sh&#34;&gt;&lt;code&gt;$ brew install node
$ curl https://npmjs.org/install.sh | sh
$ npm install -g grunt-cli
$ npm install grunt --save-dev
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Integration&lt;/h2&gt;
&lt;p&gt;To integrate &lt;a href=&#34;http://gruntjs.com&#34;&gt;Grunt.js&lt;/a&gt; in your project, you just need to add two files, package.json and Gruntfile.js, to the root of your project.&lt;/p&gt;
&lt;h3&gt;package.json&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://nodejs.org&#34;&gt;package.json&lt;/a&gt; file should contain project configurations (project name, version, license, author, etc...), it is always located in project root :&lt;/p&gt;
&lt;pre lang=&#34;json&#34;&gt;&lt;code&gt;{
  &amp;#34;name&amp;#34; : &amp;#34;example&amp;#34;,
  &amp;#34;version&amp;#34; : &amp;#34;0.0.1&amp;#34;,
  &amp;#34;author&amp;#34;: &amp;#34;Adnane Belmadiaf&amp;#34;,
  &amp;#34;homepage&amp;#34;: &amp;#34;http://daker.me&amp;#34;,
  &amp;#34;devDependencies&amp;#34;: {
    &amp;#34;grunt&amp;#34;: &amp;#34;~0.4.0&amp;#34;,
    &amp;#34;grunt-contrib-concat&amp;#34;: &amp;#34;~0.1.3&amp;#34;,
    &amp;#34;grunt-contrib-uglify&amp;#34;: &amp;#34;~0.1.1&amp;#34;,
    &amp;#34;grunt-contrib-cssmin&amp;#34;: &amp;#34;~0.4.1&amp;#34;,
    &amp;#34;grunt-contrib-jshint&amp;#34;: &amp;#34;~0.1.0&amp;#34;,
    &amp;#34;grunt-contrib-compress&amp;#34;: &amp;#34;~0.3.3&amp;#34;
  }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This will install Grunt and the plugins you will be using in your project, now all you need to do is running &lt;code&gt;npm install&lt;/code&gt; command in the root folder of the project.&lt;/p&gt;
&lt;h3&gt;Gruntfile.js&lt;/h3&gt;
&lt;p&gt;Gruntfile.js is used to define and configure tasks, and load &lt;a href=&#34;http://gruntjs.com&#34;&gt;Grunt.js&lt;/a&gt; &lt;a href=&#34;http://gruntjs.com/plugins&#34;&gt;plugins&lt;/a&gt;.&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;/*global module:false*/
module.exports = function(grunt){
    grunt.registerTask(&amp;#39;hello&amp;#39;, function(){
        console.log(&amp;#34;Hello from the Gruntfile!&amp;#34;);
    });
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;This is the Gruntfile.js i use to jshint/concat/cssmin and uglify all my CSS and JS files in one .min.(js|css) file. Sure you can go deeper, you can compile your Less or Sass files, watch files and run tasks whenever they changed and more.&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;/*global module:false*/

module.exports = function(grunt) {

  grunt.initConfig({
    pkg: grunt.file.readJSON(&amp;#39;package.json&amp;#39;),
    meta: {
      banner:
        &amp;#39;/*!\n&amp;#39; +
        &amp;#39; * app.js &amp;lt;%= pkg.version %&amp;gt; (&amp;lt;%= grunt.template.today(&amp;#34;yyyy-mm-dd, HH:MM&amp;#34;) %&amp;gt;)\n&amp;#39; +
        &amp;#39; * GNU LGPL v3\n&amp;#39; +
        &amp;#39; */&amp;#39;
    },
    jshint: {
      options: {
        curly: false,
        eqeqeq: true,
        immed: true,
        latedef: true,
        newcap: true,
        noarg: true,
        sub: true,
        undef: true,
        eqnull: true,
        browser: true,
        expr: true,
        globals: {
          head: false,
          module: false,
          console: false
        }
      },
      files: [ &amp;#39;Gruntfile.js&amp;#39;, &amp;#39;js/app.js&amp;#39; ]
    },
    concat: {
      options:{
        separator: &amp;#39;;&amp;#39;
      },
      js: {
        src: [&amp;#39;src/js/*.js&amp;#39;],
        dest: &amp;#39;build/app.js&amp;#39;
      },
      css:{
        src: [&amp;#39;src/css/*.css&amp;#39;],
        dest: &amp;#39;build/app.css&amp;#39;
      }
    },
    uglify: {
      options: {
        banner: &amp;#39;&amp;lt;%= meta.banner %&amp;gt;\n&amp;#39;
      },
      build: {
        src: &amp;#39;&amp;lt;%= concat.js.dest %&amp;gt;&amp;#39;,
        dest: &amp;#39;build/app.min.js&amp;#39;
      }
    },

    cssmin: {
      options: {
            banner: &amp;#39;/*!\n&amp;#39; +
        &amp;#39; * app.min.css &amp;lt;%= pkg.version %&amp;gt; (&amp;lt;%= grunt.template.today(&amp;#34;yyyy-mm-dd, HH:MM&amp;#34;) %&amp;gt;)\n&amp;#39; +
        &amp;#39; * GNU LGPL v3\n&amp;#39; +
        &amp;#39; */&amp;#39;
      },
      compress: {
        files: {
          &amp;#39;build/app.min.css&amp;#39;: [ &amp;#39;&amp;lt;%= concat.css.dest %&amp;gt;&amp;#39; ]
        }
      }
    }
  });

  grunt.loadNpmTasks( &amp;#39;grunt-contrib-jshint&amp;#39; );
  grunt.loadNpmTasks( &amp;#39;grunt-contrib-cssmin&amp;#39; );
  grunt.loadNpmTasks( &amp;#39;grunt-contrib-uglify&amp;#39; );
  grunt.loadNpmTasks( &amp;#39;grunt-contrib-concat&amp;#39; );

  // Default task.
  grunt.registerTask( &amp;#39;default&amp;#39;, [ &amp;#39;jshint&amp;#39;, &amp;#39;concat&amp;#39;, &amp;#39;cssmin&amp;#39;, &amp;#39;uglify&amp;#39; ] );
};
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Now all you need to do is to run &lt;code&gt;grunt&lt;/code&gt; from the commandline to run the default task or run &lt;code&gt;grunt task-alias&lt;/code&gt; to run a specific task.&lt;/p&gt;
&lt;h3&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://gruntjs.com&#34;&gt;Grunt.js&lt;/a&gt; is definetely the way to go, so make sure to take some time to try it and you&amp;#39;ll be supprised how itâ€™s easy get started to work with.&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>Pocket TV turns any TV into an Android smart TV</title>
                <link rel="alternate" href="http://daker.me/2013/06/pocket-tv-turns-any-tv-into-an-android-smart-tv.html" type="text/html" />
                <id>http://daker.me/2013/06/pocket-tv-turns-any-tv-into-an-android-smart-tv.html</id>
                <updated>2013-06-16T16:15:00Z</updated>
                
                <summary type="html">Last Wednesday i got my Pocket TV or PTV from &lt;a href=&#34;https://infinitec.com&#34;&gt;infinitec&lt;/a&gt;, a small pocket-sized dongle that connects to the HDMI port of any regular TV and converts it into a powerful Android Smart TV, it can also be controlled by Android mobile devices using the &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.apps.tvremote&#34;&gt;Google TV Remote&lt;/a&gt; app or using there own &lt;a href=&#34;http://infinitec.com/forum/viewtopic.php?f=2&amp;amp;t=605&#34;&gt;remote app&lt;/a&gt; which is still in beta.</summary>
                <content type="html">&lt;p&gt;Last Wednesday i got my Pocket TV or PTV from &lt;a href=&#34;https://infinitec.com&#34;&gt;infinitec&lt;/a&gt;, a small pocket-sized dongle that connects to the HDMI port of any regular TV and converts it into a powerful Android Smart TV, it can also be controlled by Android mobile devices using the &lt;a href=&#34;https://play.google.com/store/apps/details?id=com.google.android.apps.tvremote&#34;&gt;Google TV Remote&lt;/a&gt; app or using there own &lt;a href=&#34;http://infinitec.com/forum/viewtopic.php?f=2&amp;amp;t=605&#34;&gt;remote app&lt;/a&gt; which is still in beta.&lt;/p&gt;
&lt;h1&gt;Features&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;1 GHz ARM Cortex A9 Processor&lt;/li&gt;
&lt;li&gt;Mali-400MP Graphics Processor&lt;/li&gt;
&lt;li&gt;1 GB RAM&lt;/li&gt;
&lt;li&gt;8 GB internal storage (expandable via MicroSD up to 32GB)&lt;/li&gt;
&lt;li&gt;WiFi 802.11 b/g/n&lt;/li&gt;
&lt;li&gt;Bluetooth supported via external USB Bluetooth Connector&lt;/li&gt;
&lt;li&gt;USB 2.0 Power&lt;/li&gt;
&lt;li&gt;Mini USB port Memory&lt;/li&gt;
&lt;li&gt;HDMI 1.3 (Video and Audio)&lt;/li&gt;
&lt;li&gt;Dimensions: 86 x 31 x 14 mm&lt;/li&gt;
&lt;li&gt;Weight: 35 grams&lt;/li&gt;
&lt;li&gt;Runs Android 4.0 ICS&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The packaging is good looking, clean and neat&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/ptv.jpg&#34; alt=&#34;Pocket TV&#34;&gt;&lt;/p&gt;

&lt;p&gt;What&amp;#39;s in the box :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Infintec Android Pocket TV (Black)&lt;/li&gt;
&lt;li&gt;Quick Start Guide&lt;/li&gt;
&lt;li&gt;Air Remote&lt;/li&gt;
&lt;li&gt;Infared Remote&lt;/li&gt;
&lt;li&gt;Infared Receiver&lt;/li&gt;
&lt;li&gt;HDMI extender cable&lt;/li&gt;
&lt;li&gt;MiniUSB Power Cable&lt;/li&gt;
&lt;li&gt;Power Adapter EU/US&lt;/li&gt;
&lt;/ul&gt;
&lt;h1&gt;Setup&lt;/h1&gt;
&lt;p&gt;The setup was easy and it took me about 5min, i plugged the PTV into my LG 22-Inch Widescreen 1080p HDMI port, connected the USB cable to the TV USB port. Booting took about 35 seconds, once booter i had the setup guide, for language, Wifi and TV resolution.&lt;/p&gt;
&lt;h1&gt;Air Remote&lt;/h1&gt;
&lt;p&gt;The Air Remote comes with a built-in gyroscope for a motion controller nav also it has a built-in QWERTY thumb keyboard for entering text. and a USB bluetooth Receiver that you have to plug in.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/ptv-air.jpg&#34; alt=&#34;Air Remote&#34;&gt;&lt;/p&gt;
&lt;h1&gt;Infrared Remote&lt;/h1&gt;
&lt;p&gt;The IR remote is really light, uses standard infrared signals and gives the ability to control the PTV using basic buttons, directional arrows, browser button, home, back, volume up/down, search and a power off button.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/ptv-ir.jpg&#34; alt=&#34;Infrared Remote&#34;&gt;&lt;/p&gt;
&lt;h1&gt;Apps&lt;/h1&gt;
&lt;p&gt;The pre-installed Android ICS operating system comes with some preinstalled apps like Gmail, Youtube, Browser, an app installer, a filebrowser, Gtalk (Hangout after ther upgrade), a movie player and musicplayer. It provides access to Google Play store with thousands of android apps.&lt;/p&gt;

&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;http://www.youtube.com/embed/p-S1JBgBKLI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
</content>
            </entry>
        
            <entry>
                <title>5 CSS3 features explained</title>
                <link rel="alternate" href="http://daker.me/2013/06/5-css3-features-explained.html" type="text/html" />
                <id>http://daker.me/2013/06/5-css3-features-explained.html</id>
                <updated>2013-06-09T15:45:00Z</updated>
                
                <summary type="html">CSS3 is one of the coolest new web technologies available to front-end developers right now, overtime we have seen so many features that generally were implemented via &lt;a href=&#34;http://daker.me/2013/06/5-html5-javascript-apis-to-keep-an-eye-on.html&#34;&gt;JavaScript&lt;/a&gt;, can now be acheived with a few lines of CSS.&lt;br&gt;
So in this post i will explain to you five features that will save you time and energy.</summary>
                <content type="html">&lt;p&gt;CSS3 is one of the coolest new web technologies available to front-end developers right now, overtime we have seen so many features that generally were implemented via &lt;a href=&#34;http://daker.me/2013/06/5-html5-javascript-apis-to-keep-an-eye-on.html&#34;&gt;JavaScript&lt;/a&gt;, can now be acheived with a few lines of CSS.&lt;br&gt;
So in this post i will explain to you five features that will save you time and energy.&lt;/p&gt;
&lt;h2&gt;Flexible boxes&lt;/h2&gt;
&lt;p&gt;The CSS3 Flexible Box, better known as Flexbox enables you to create complex layouts with only a few lines of code.&lt;br&gt;
How many time you wanted to vertically center a div ? how many time you wanted to create a 3 columns layout with 2 fluid columns and one fixed ? here is how to do it â€” with CSS only&lt;/p&gt;
&lt;h3&gt;Vertical centering of a div&lt;/h3&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/daker/NnkHF/30/embedded/result,css,html&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;
&lt;h3&gt;Fixed-Fluid-Fixed Layout&lt;/h3&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/daker/GWZzd/embedded/result,css,html&#34; allowfullscreen=&#34;allowfullscreen&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;As you can see this will allow you to make other layouts(Fluid-Fluid-Fixed, Fluid-Fixed-Fixed, etc...), easy no ?&lt;/p&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;20.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;26.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;12.1&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;&gt;&lt;div&gt;10.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34;&gt;&lt;div&gt;5.1&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;
&lt;h2&gt;:nth-child&lt;/h2&gt;
&lt;p&gt;:nth-child is a CSS pseudo-class which allows you to select elements with a formula &lt;code&gt;:nth-child(n)&lt;/code&gt;. The pseudo-class accepts an argument, n, which can be a keyword, a number or a number expression of the form an+b.&lt;/p&gt;

&lt;p&gt;A good use case is displaying a zebra striping table without using extra CSS classes, JavaScript, or server-side code using the modulo, only CSS hein ?&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/daker/uc2Kv/embedded/result,css,html&#34; allowfullscreen=&#34;allowfullscreen&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;There is also &lt;code&gt;:nth-of-type&lt;/code&gt; it works the same way , except that it only considers element of the given type.&lt;/p&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;3.5&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;4.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;9.5&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;&gt;&lt;div&gt;9.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34;&gt;&lt;div&gt;3.2&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;
&lt;h2&gt;CSS Hyphenation&lt;/h2&gt;
&lt;p&gt;The hyphens CSS property tells the browser how to go about splitting words to improve the layout of text when line-wrapping. On HTML, the language is determined by the lang attribute: browsers will hyphenate only if this attribute is present and if an appropriate hyphenation dictionary is available. On XML, the xml:lang attribute must be used.&lt;/p&gt;

&lt;p&gt;Source &lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/hyphens&#34;&gt;MDN&lt;/a&gt;.&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/daker/8w9bn/embedded/result,css,html&#34; allowfullscreen=&#34;allowfullscreen&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;p&gt;NB: To see the result you need to try to resize the window of your demo.&lt;/p&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;6.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;13.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;&gt;&lt;div&gt;10.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34;&gt;&lt;div&gt;5.1&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;
&lt;h2&gt;CSS Filter Effects&lt;/h2&gt;
&lt;p&gt;Filters are a powerful tool, they can manipulate the appearance of any HTML element and can be stacked together to create unique effects and provide endless of possibilities, such as grayscale, sepia, saturation, opacity, and blurs. The &lt;code&gt;filter&lt;/code&gt; property creates a hardware-accelerated effects using the GPU.&lt;/p&gt;

&lt;iframe width=&#34;100%&#34; height=&#34;300&#34; src=&#34;http://jsfiddle.net/daker/qZdmS/embedded/result,css,html&#34; allowfullscreen=&#34;allowfullscreen&#34; frameborder=&#34;0&#34;&gt;&lt;/iframe&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;18.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;15.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;  class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34;&gt;&lt;div&gt;6.0&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;
&lt;h2&gt;CSS3 Media Queries&lt;/h2&gt;
&lt;p&gt;CSS3 Media queries allow you to target CSS rules based on screen size, device-orientation or display-density, you can add expressions to media type to check for certain conditions, this is the technique used for the so called &amp;quot;Responsive design&amp;quot;.&lt;/p&gt;
&lt;pre lang=&#34;css&#34;&gt;&lt;code&gt;/* The following CSS will apply if the viewing area is smaller than 600px. */
@media screen and (max-width: 600px) {
    .class {
        background: #ccc;
    }
}

/* The following CSS will apply if the viewing area is 700px wide or wider and the display is in landscape mode. */
@media screen and (min-width: 700px) and (orientation: landscape) {
    .class {
        background: #ccc;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also apply css rules based on media types &lt;code&gt;screen&lt;/code&gt;, &lt;code&gt;tv&lt;/code&gt; or &lt;code&gt;handheld&lt;/code&gt;, you can find the list &lt;a href=&#34;http://www.w3.org/TR/CSS2/media.html#media-types&#34;&gt;here&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;20.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;26.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;12.1&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;&gt;&lt;div&gt;9.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34;&gt;&lt;div&gt;5.1&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;

&lt;p&gt;Let me know your thoughts in the comments below, also you can discuss, upvote this post over at &lt;a href=&#34;https://news.ycombinator.com/item?id=5849053&#34;&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>5 HTML5 Javascript APIs to keep an eye on</title>
                <link rel="alternate" href="http://daker.me/2013/06/5-html5-javascript-apis-to-keep-an-eye-on.html" type="text/html" />
                <id>http://daker.me/2013/06/5-html5-javascript-apis-to-keep-an-eye-on.html</id>
                <updated>2013-06-02T17:30:00Z</updated>
                
                <summary type="html">In my &lt;a href=&#34;http://daker.me/2013/05/5-html5-features-you-need-to-know.html&#34;&gt;last post&lt;/a&gt;, i have talked about HTML5 APIs, so thought it will also interesting to write about some new &lt;strike&gt;old&lt;/strike&gt; Javasript APIs. Since CSS has been improving over the time and today you can achieve what was only done with Javascript with CSS only, on the other side Javascript have to improve and follow the evolution, so today Javascript can do a lot of things, like accessing hardware(camera, microphone, gamepad, GPU), accessing the filesystem and websocket.</summary>
                <content type="html">&lt;p&gt;In my &lt;a href=&#34;http://daker.me/2013/05/5-html5-features-you-need-to-know.html&#34;&gt;last post&lt;/a&gt;, i have talked about HTML5 APIs, so thought it will also interesting to write about some new &lt;strike&gt;old&lt;/strike&gt; Javasript APIs. Since CSS has been improving over the time and today you can achieve what was only done with Javascript with CSS only, on the other side Javascript have to improve and follow the evolution, so today Javascript can do a lot of things, like accessing hardware(camera, microphone, gamepad, GPU), accessing the filesystem and websocket.&lt;/p&gt;
&lt;h2&gt;Battery Status API&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;http://www.w3.org/TR/battery-status/&#34;&gt;Battery Status API&lt;/a&gt; allows any webpage to inspect the state of the device&amp;#39;s (Laptop, phone or tablet) battery through javascript :&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;var battery = navigator.battery || navigator.webkitBattery || navigator.mozBattery

console.log(&amp;#34;Battery charging: &amp;#34;, battery.charging); // true
console.log(&amp;#34;Battery level: &amp;#34;, battery.level); // 0.58
console.log(&amp;#34;Battery discharging time: &amp;#34;, battery.dischargingTime);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;As you can see you need to do more checks to make your code cross-browser compatible, i have done some researches and i have found &lt;a href=&#34;https://github.com/pstadler/battery.js/&#34;&gt;battery.js&lt;/a&gt; a tiny wrapper for the Battery Status API :&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;if(Battery.isSupported()) {
    // Get the battery status
    var status = Battery.getStatus();
    console.log(&amp;#39;Level: &amp;#39; + Math.floor(status.level * 100) + &amp;#39;%&amp;#39;); // 30%
    console.log(&amp;#39;Charging: &amp;#39; + status.charging);                   // true
    console.log(&amp;#39;Time until charged: &amp;#39; + status.chargingTime);     // 3600 (seconds) or Infinity
    console.log(&amp;#39;Battery time left: &amp;#39; + status.dischargingTime);   // 3600 (seconds) or Infinity

    // Register a handler to get notified when battery status changes
    Battery.onUpdate = function(status) {
        console.log(status); // {level, charging, chargingTime, dischargingTime}
    };
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;16.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;19&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;
&lt;h2&gt;Gamepad API&lt;/h2&gt;
&lt;p&gt;Gamepad API allows you to connect your console gamepad into your computer and use it for browser based games. With the increase in popularity of HTML5 games this API will have a prominent future.&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;navigator.gamepads = navigator.webkitGamepads || navigator.MozGamepads;

var requestAnimationFrame = window.webkitRequestAnimationFrame ||
                            window.mozRequestAnimationFrame;
var cancelAnimationFrame = window.webkitCancelAnimationFrame ||
                           window.MozCancelAnimationFrame;

var controllers = {}; // Stash connected controllers.
var reqId = null;

function onConnected(e) {
    controllers[e.gamepad.index] = e.gamepad;
    runAnimation();
}

function onDisconnected(e) {
    delete controllers[e.gamepad.index];
    cancelAnimationFrame(reqId);
}

window.addEventListener(&amp;#39;webkitgamepadconnected&amp;#39;, onConnected, false);
window.addEventListener(&amp;#39;webkitgamepaddisconnected&amp;#39;, onDisconnected, false);

window.addEventListener(&amp;#39;MozGamepadDisconnected&amp;#39;, onDisconnected, false);
window.addEventListener(&amp;#39;MozGamepadConnected&amp;#39;, onConnected, false);
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Source : &lt;a href=&#34;https://html5-demos.appspot.com/static/html5-therealbleedingedge/template/index.html#27&#34;&gt;The Edge of HTML5&lt;/a&gt;&lt;/p&gt;

&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;3.6&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;21&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;

&lt;p&gt;There is a library called &lt;a href=&#34;http://www.gamepadjs.com/&#34;&gt;gamepadjs&lt;/a&gt;, which will let you use this API very easily.&lt;/p&gt;
&lt;h2&gt;Device Orientation API&lt;/h2&gt;
&lt;p&gt;Using device orientation, you can determine the orientation of the device as well as gather information about its movement (alpha, beta and gamma).&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/deviceorientation.png&#34; alt=&#34;Source html5rocks.com&#34;&gt;&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;if (window.DeviceOrientationEvent) {
    window.addEventListener(&amp;#39;deviceorientation&amp;#39;, function(event) {
        var a = event.alpha,
            b = event.beta,
            g = event.gamma;
        console.log(&amp;#39;Orientation - Alpha: &amp;#39; + a + &amp;#39;, Beta: &amp;#39;+ b + &amp;#39;, Gamma: &amp;#39; + g);
    }, false);
} else {
    console.log(&amp;#39;This device does not support deviceorientation&amp;#39;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;3.6&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;7.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;15.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;

&lt;p&gt;To use this feature your device must have gyroscope capabilities, more about browser support can be found on &lt;a href=&#34;http://caniuse.com/deviceorientation&#34;&gt;caniuse.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Geolocation API&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;http://dev.w3.org/geo/api/&#34;&gt;Geolocation API&lt;/a&gt; lets you share your location with trusted web sites. The latitude and longitude are available to JavaScript on the page, which in turn can send it back to the remote web server and do fancy location-aware things like finding local businesses or showing your location on a map, it can be also used for &amp;quot;geo-tagging&amp;quot; user&amp;#39;s content like photos.&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
        var lat = position.coords.latitude,
            lon = position.coords.longitude;
        console.log(&amp;#39;Geolocation - Latitude: &amp;#39;+ lat +&amp;#39;, Longitude: &amp;#39;+ lon);
    });
}
else {
    console.log(&amp;#39;Geolocation is not supported for this Browser/OS version yet.&amp;#39;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;3.5&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;5.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;10.6&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;&gt;&lt;div&gt;9.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34;&gt;&lt;div&gt;5.0&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;

&lt;p&gt;More about browser support can be found on &lt;a href=&#34;http://caniuse.com/geolocation&#34;&gt;caniuse.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2&gt;Page Visibility API&lt;/h2&gt;
&lt;p&gt;The &lt;a href=&#34;http://www.w3.org/TR/page-visibility/&#34;&gt;Page Visibility API&lt;/a&gt; let&amp;#39;s you determine if your page is visible or not, when you minimise the page or move to another tab, a visibilitychange event is triggered, this can be very useful if you are a game developer this will allow you to pause the game when the user change the page.&lt;/p&gt;
&lt;pre lang=&#34;js&#34;&gt;&lt;code&gt;document.addEventListener(&amp;#39;visibilitychange&amp;#39;, function(e) {
    console.log(&amp;#39;hidden:&amp;#39; + document.hidden,
              &amp;#39;state:&amp;#39; + document.visibilityState)
}, false);
&lt;/code&gt;&lt;/pre&gt;
&lt;div class=&#34;browser-support&#34;&gt;
    &lt;dfn title=&#34;firefox&#34;&gt;&lt;div&gt;10.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;chrome&#34;&gt;&lt;div&gt;14.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;opera&#34;&gt;&lt;div&gt;12.1&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;ie&#34;&gt;&lt;div&gt;10.0&lt;/div&gt;&lt;/dfn&gt;
    &lt;dfn title=&#34;safari&#34; class=&#34;unsupported&#34;&gt;&lt;div&gt;â€”&lt;/div&gt;&lt;/dfn&gt;
&lt;/div&gt;

&lt;p&gt;More about browser support can be found on &lt;a href=&#34;http://caniuse.com/pagevisibility&#34;&gt;caniuse.com&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Let me know your thoughts in the comments below, also you can discuss, upvote this post over at &lt;a href=&#34;https://news.ycombinator.com/item?id=5809719&#34;&gt;Hacker News&lt;/a&gt;.&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>5 Sublime Text 2 packages to enhance your frontend development workflow</title>
                <link rel="alternate" href="http://daker.me/2013/05/5-sublimetext2-packages-to-enhance-your-frontend-development-workflow.html" type="text/html" />
                <id>http://daker.me/2013/05/5-sublimetext2-packages-to-enhance-your-frontend-development-workflow.html</id>
                <updated>2013-05-28T23:45:00Z</updated>
                
                <summary type="html">Sublime Text 2 is a lightweight, cross platform, blazing fast text editor with chrome-like tabs and split window layouts, it works for both web development and software development.</summary>
                <content type="html">&lt;p&gt;Sublime Text 2 is a lightweight, cross platform, blazing fast text editor with chrome-like tabs and split window layouts, it works for both web development and software development.&lt;/p&gt;

&lt;p&gt;Sublime Text has got a wide range of open source plugins with a massive community of plugin developers.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/sublime.png&#34; alt=&#34;Sublime Text 2&#34;&gt;&lt;/p&gt;

&lt;p&gt;For my frontend development workflow i use some plugins with a specific user settings and sure the wonderfull &lt;a href=&#34;https://github.com/buymeasoda/soda-theme&#34;&gt;Soda theme&lt;/a&gt; by &lt;a href=&#34;https://github.com/buymeasoda&#34;&gt;Ian Hill&lt;/a&gt;, so hereâ€™s &lt;a href=&#34;https://gist.github.com/daker/5665850&#34;&gt;my settings file&lt;/a&gt;:&lt;/p&gt;
&lt;pre lang=&#34;json&#34;&gt;&lt;code&gt;{
    &amp;#34;auto_complete&amp;#34;: false,
    &amp;#34;caret_style&amp;#34;: &amp;#34;phase&amp;#34;,
    &amp;#34;close_windows_when_empty&amp;#34;: false,
    &amp;#34;color_scheme&amp;#34;: &amp;#34;Packages/Tomorrow Color Schemes/Tomorrow-Night.tmTheme&amp;#34;,
    &amp;#34;draw_white_space&amp;#34;: &amp;#34;all&amp;#34;,
    &amp;#34;find_selected_text&amp;#34;: true,
    &amp;#34;fold_buttons&amp;#34;: false,
    &amp;#34;folder_exclude_patterns&amp;#34;:
    [
        &amp;#34;.svn&amp;#34;,
        &amp;#34;.git&amp;#34;,
        &amp;#34;.hg&amp;#34;,
        &amp;#34;CVS&amp;#34;,
        &amp;#34;_build&amp;#34;,
        &amp;#34;dist&amp;#34;,
        &amp;#34;build&amp;#34;,
        &amp;#34;site&amp;#34;
    ],
    &amp;#34;font_face&amp;#34;: &amp;#34;Ubuntu Mono&amp;#34;,
    &amp;#34;font_options&amp;#34;:
    [
        &amp;#34;subpixel_antialias&amp;#34;
    ],
    &amp;#34;font_size&amp;#34;: 12.0,
    &amp;#34;highlight_line&amp;#34;: true,
    &amp;#34;ignored_packages&amp;#34;:
    [
        &amp;#34;Vintage&amp;#34;
    ],
    &amp;#34;rulers&amp;#34;:
    [
        72,
        79
    ],
    &amp;#34;theme&amp;#34;: &amp;#34;Soda Dark.sublime-theme&amp;#34;,
    &amp;#34;translate_tabs_to_spaces&amp;#34;: true,
    &amp;#34;trim_trailing_white_space_on_save&amp;#34;: true
}

&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Package Control&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://wbond.net/sublime_packages/package_control/&#34;&gt;Package Control&lt;/a&gt; is one of my favorite plugins, it allows users to manage packages very easily, with one shortcut you have access to a long list of plugins available to install and update is automaticly handled. To install it open the console View-&amp;gt;Show Console, then paste the following code :&lt;/p&gt;
&lt;pre lang=&#34;python&#34;&gt;&lt;code&gt;import urllib2,os; pf=&amp;#39;Package Control.sublime-package&amp;#39;; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),&amp;#39;wb&amp;#39;).write(urllib2.urlopen(&amp;#39;http://sublime.wbond.net/&amp;#39;+pf.replace(&amp;#39; &amp;#39;,&amp;#39;%20&amp;#39;)).read()); print(&amp;#39;Please restart Sublime Text to finish installation&amp;#39;)
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;To use it simply invoke the command palette using ctrl+shift+p or âŒ˜+shift+p then type &amp;quot;install&amp;quot; :&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/sublime-palette.png&#34; alt=&#34;Sublime Text 2 command palette&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Sublime Linter&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/SublimeLinter/SublimeLinter&#34;&gt;Sublime Linter&lt;/a&gt; is the Swiss knife of code linting, it highlights potential errors in your code depending on the language you are using.&lt;/p&gt;
&lt;h2&gt;LiveReload&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/dz0ny/LiveReload-sublimetext2&#34;&gt;LiveReload&lt;/a&gt; can help you to save a lot time, you don&amp;#39;t need to hit refresh in your browser each time you want to test, everything will be done automatically when you save your file.&lt;/p&gt;
&lt;h2&gt;Prefixr&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://wbond.net/sublime_packages/prefixr&#34;&gt;Prefixr&lt;/a&gt; runs your CSS through the &lt;a href=&#34;http://prefixr.com/&#34;&gt;Prefixr&lt;/a&gt; API to make it Cross-Browser.&lt;/p&gt;
&lt;h2&gt;Sidebar Enhancements&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/titoBouzout/SideBarEnhancements&#34;&gt;Sidebar Enhancements&lt;/a&gt; Makes the sidebar more user friendly and improves its usability by adding more options to it. You can delete files and open files using certain programs like Photoshop. giving you more options on new files, moving files, copying files and opening files in another program.&lt;/p&gt;
&lt;h2&gt;Emmet&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/sergeche/emmet-sublime&#34;&gt;Emmet (ex Zen Coding)&lt;/a&gt; - With this plugin you will see the &amp;quot;Valentino Rossi&amp;quot; on you, this will bring hight-speed development process in your HTML and CSS.&lt;/p&gt;
&lt;h2&gt;Bonus&lt;/h2&gt;
&lt;p&gt;Here are some useful Keyboard shortcuts to remember :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;  ctrl+d Select the next occurrence of the selected word&lt;/li&gt;
&lt;li&gt;  ctrl+k, ctrl+b - Toggle the sidebar&lt;/li&gt;
&lt;li&gt;  f11 - Toggle Full Screen&lt;/li&gt;
&lt;li&gt;  shift+f11 - Toggle Distraction Free (this one is my &lt;strong&gt;favorite&lt;/strong&gt;)&lt;/li&gt;
&lt;li&gt;  alt+. - Close Tag&lt;/li&gt;
&lt;li&gt;  ctrl+p - Show the go to overlay panel&lt;/li&gt;
&lt;li&gt;  ctrl+shift+p - Show the command overlay panel&lt;/li&gt;
&lt;li&gt;  ctrl+alt+p - Show the project selector panel&lt;/li&gt;
&lt;li&gt;  ctrl+r - Show the go to overlay panel default to method selector&lt;/li&gt;
&lt;li&gt;  ctrl+g - Show the go to overlay panel default to go to line selector&lt;/li&gt;
&lt;li&gt;  ctrl+; - Show the go to overlay panel default to variable selector&lt;/li&gt;
&lt;li&gt;  ctrl+shift+up - Swap with the line above&lt;/li&gt;
&lt;li&gt;  ctrl+shift+down - Swap with the line below&lt;/li&gt;
&lt;li&gt;  ctrl+/ - Toggle a comment&lt;/li&gt;
&lt;li&gt;  ctrl+shift+/ - Toggle a comment block&lt;/li&gt;
&lt;li&gt;  ctrl+shift+d - Duplicate a line&lt;/li&gt;
&lt;li&gt;  ctrl+` - Display console panel&lt;/li&gt;
&lt;li&gt;  ctrl+space - Auto complete the current selected snippet&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I hope this will help you with your development workflow, let me know your thoughts and what plugins you use in the comments below.&lt;/p&gt;

&lt;p&gt;You can discuss, upvote this post over at &lt;a href=&#34;https://news.ycombinator.com/item?id=5785243&#34;&gt;Hacker News&lt;/a&gt; or on &lt;a href=&#34;http://www.reddit.com/r/webdev/comments/1f8anb/5_sublime_text_2_packages_to_enhance_your/&#34;&gt;/r/webdev&lt;/a&gt;.&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>5 HTML5 Features you need to know</title>
                <link rel="alternate" href="http://daker.me/2013/05/5-html5-features-you-need-to-know.html" type="text/html" />
                <id>http://daker.me/2013/05/5-html5-features-you-need-to-know.html</id>
                <updated>2013-05-25T19:00:00Z</updated>
                
                <summary type="html">HTML5 has been around for a while now, it introduces lots of new and exciting new JavaScript and HTML APIs for both mobile and desktop, so in this post you will discover some HTML5 features that will enhance your web apps and will save you a lot of time.</summary>
                <content type="html">&lt;p&gt;HTML5 has been around for a while now, it introduces lots of new and exciting new JavaScript and HTML APIs for both mobile and desktop, so in this post you will discover some HTML5 features that will enhance your web apps and will save you a lot of time.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/html5-logo.png&#34; alt=&#34;HTML5 logo&#34;&gt;&lt;/p&gt;
&lt;h2&gt;DNS Prefetching&lt;/h2&gt;
&lt;p&gt;DNS hostname resolution is one of the issues that can make any website slow. Modern browsers start to be very smart when it comes to DNS resolution, they try to resolve domain names then cache them before the user tries to follow any link on the webpage.&lt;/p&gt;

&lt;p&gt;With the dns-prefetch feature you are allowed to manually control this operation by telling the browser which domain names to resolve :&lt;/p&gt;
&lt;pre lang=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;link rel=&amp;#34;dns-prefetch&amp;#34; href=&amp;#34;//fonts.googleapis.com&amp;#34;&amp;gt;
&amp;lt;link rel=&amp;#34;dns-prefetch&amp;#34; href=&amp;#34;//google-analytics.com&amp;#34;&amp;gt;
&amp;lt;link rel=&amp;#34;dns-prefetch&amp;#34; href=&amp;#34;//www.google-analytics.com&amp;#34;&amp;gt;
&amp;lt;link rel=&amp;#34;dns-prefetch&amp;#34; href=&amp;#34;//platform.twitter.com&amp;#34;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Link Prefetching&lt;/h2&gt;
&lt;p&gt;Link prefetching allows developers to specify pages or assets they want to silently preload once the page load, like loading the first search results :&lt;/p&gt;
&lt;pre lang=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;link rel=&amp;#34;prefetch&amp;#34; href=&amp;#34;http://daker.me/2013/05/hello-world.html&amp;#34; /&amp;gt;
&amp;lt;link rel=&amp;#34;prefetch&amp;#34; href=&amp;#34;http://daker.me/assets/images/avatar.png&amp;#34; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Also you can use the &lt;a href=&#34;https://developers.google.com/chrome/whitepapers/prerender&#34;&gt;prerendering&lt;/a&gt; feature which will make your website even faster, the browser will fetch and render the entire next page on the background and show it only when the user click on the link :&lt;/p&gt;
&lt;pre lang=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;link rel=&amp;#34;prerender&amp;#34; href=&amp;#34;http://daker.me/2013/05/hello-world.html&amp;#34; /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;iframe width=&#34;780&#34; height=&#34;439&#34; src=&#34;http://www.youtube.com/embed/_Jn93FDx9oI&#34; frameborder=&#34;0&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;h2&gt;Download Attribute&lt;/h2&gt;
&lt;p&gt;The HTML5 download attribute allows developers to force a file to download rather than go to that specific page, you no longer need to rely on server side code to do that :&lt;/p&gt;
&lt;pre lang=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;a href=&amp;#34;download_pdf.php?id=15&amp;#34; download=&amp;#34;myfile.pdf&amp;#34;&amp;gt;Download PDF&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Regular Expressions&lt;/h2&gt;
&lt;p&gt;I know you&amp;#39;ll fall in love with this feature, no more js &lt;strike&gt;or a server side&lt;/strike&gt; code to check if the user&amp;#39;s input is a valid email or url adress, with the pattern attribute you can use regular expressions directly :&lt;/p&gt;
&lt;pre lang=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;input type=&amp;#34;email&amp;#34; pattern=&amp;#34;[^ @]*@[^ @]*&amp;#34; value=&amp;#34;&amp;#34;&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Datalist Element&lt;/h2&gt;
&lt;p&gt;Datalist element is a litle big addition, no more use of jQuery plugins for autocomplete inputs combined with a server side code that hit the database on each user keystroke :&lt;/p&gt;
&lt;pre lang=&#34;html&#34;&gt;&lt;code&gt;&amp;lt;form action=&amp;#34;form.php&amp;#34; method=&amp;#34;post&amp;#34;&amp;gt;
    &amp;lt;input list=&amp;#34;cars&amp;#34; name=&amp;#34;cars&amp;#34; &amp;gt;
    &amp;lt;datalist id=&amp;#34;cars&amp;#34;&amp;gt;
        &amp;lt;option value=&amp;#34;Volvo&amp;#34;&amp;gt;
        &amp;lt;option value=&amp;#34;BMW&amp;#34;&amp;gt;
        &amp;lt;option value=&amp;#34;Bugatti&amp;#34;&amp;gt;
        &amp;lt;option value=&amp;#34;Cadillac&amp;#34;&amp;gt;
        &amp;lt;option value=&amp;#34;Chevrolet&amp;#34;&amp;gt;
        &amp;lt;option value=&amp;#34;Chrysler&amp;#34;&amp;gt;
    &amp;lt;/datalist&amp;gt;
    &amp;lt;input type=&amp;#34;submit&amp;#34; /&amp;gt;
&amp;lt;/form&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;I hope this will help you save time and enhance you coding skills, let me know your thoughts in the comments below.&lt;/p&gt;

&lt;p&gt;You can discuss, upvote this post over at &lt;a href=&#34;https://news.ycombinator.com/item?id=5768174&#34;&gt;Hacker News&lt;/a&gt; or on &lt;a href=&#34;http://www.reddit.com/r/html5/comments/1f1sd6/5_html5_features_you_need_to_know/&#34;&gt;/r/html5&lt;/a&gt;.&lt;/p&gt;
</content>
            </entry>
        
            <entry>
                <title>Hello World</title>
                <link rel="alternate" href="http://daker.me/2013/05/hello-world.html" type="text/html" />
                <id>http://daker.me/2013/05/hello-world.html</id>
                <updated>2013-05-22T23:55:00Z</updated>
                
                <summary type="html">Hello World! Iâ€™ve been wanting a to start my own blog for a while now. Time and other constraints have been preventing me, but I finally sat down over the last week-end and hacked together what you actually see.</summary>
                <content type="html">&lt;p&gt;Hello World! Iâ€™ve been wanting a to start my own blog for a while now. Time and other constraints have been preventing me, but I finally sat down over the last week-end and hacked together what you actually see.&lt;/p&gt;

&lt;p&gt;Itâ€™s all handwritten in &lt;a href=&#34;https://en.wikipedia.org/wiki/Markdown&#34;&gt;markdown&lt;/a&gt;, generated by &lt;a href=&#34;http://mynt.mirroredwhite.com&#34;&gt;mynt&lt;/a&gt;, and powered by &lt;a href=&#34;http://pages.github.com&#34;&gt;Github pages&lt;/a&gt;, with commenting by &lt;a href=&#34;http://disqus.com/&#34;&gt;Disqus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I have decided to license the content of this website under a Creative Commons license; CC-BY-SA 3.0 Unported, to be exact. This means that you can take what I will write on this blog, reuse it for whatever you see fit, or combine it with other content under the same license, e.g. from Wikipedia. The only requirements are that :&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;you quote where you got it from, i.e. from me (Adnane Belmadiaf) and this website (&lt;a href=&#34;http://daker.me&#34;&gt;daker.me&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;you share the result under the same license&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;So feel free to leave a comment or tweet me &lt;a href=&#34;https://twitter.com/AdnaneBelmadiaf&#34;&gt;@AdnaneBelmadiaf&lt;/a&gt;.&lt;/p&gt;
</content>
            </entry>
        
    </feed>
