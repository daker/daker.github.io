<?xml version="1.0" encoding="UTF-8"?>

    <feed xmlns="http://www.w3.org/2005/Atom">
        <title>Adnane Belmadiaf's Blog - Front-end Developer</title>
        
        <link rel="alternate" href="http://daker.me/" />
        <link rel="self" href="http://daker.me/feed-utouchdev.xml" type="application/atom+xml" />
        <id>http://daker.me/</id>
        <updated>2014-12-14T21:35:43Z</updated>

        <author>
            <name>Adnane Belmadiaf</name>
            <email>daker@ubuntu.com</email>
            <uri>http://daker.me/</uri>
        </author>

        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
            <entry>
                <title>Adding UserMetrics to your app on Ubuntu Touch</title>
                <link rel="alternate" href="http://daker.me/2013/11/adding-usermetrics-to-your-app-on-ubuntu-touch.html" type="text/html" />
                <id>http://daker.me/2013/11/adding-usermetrics-to-your-app-on-ubuntu-touch.html</id>
                <updated>2013-11-30T16:00:00Z</updated>

                <summary type="html">The Welcome Screen infographic is one of the key components for the customization of the user experience on &lt;a href=&#34;http://www.ubuntu.com/phone/install&#34;&gt;Ubuntu Touch&lt;/a&gt;, beautiful visualisations of data from multiple sources, the &lt;code&gt;UserMetrics&lt;/code&gt; is the responsible component for updating the infographic using QML.</summary>
                <content type="html">&lt;p&gt;The Welcome Screen infographic is one of the key components for the customization of the user experience on &lt;a href=&#34;http://www.ubuntu.com/phone/install&#34;&gt;Ubuntu Touch&lt;/a&gt;, beautiful visualisations of data from multiple sources, the &lt;code&gt;UserMetrics&lt;/code&gt; is the responsible component for updating the infographic using QML.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/utouch/5.png&#34; alt=&#34;Welcome Screen&#34;&gt;&lt;/p&gt;

&lt;p&gt;To use the &lt;code&gt;UserMetrics&lt;/code&gt; QML module you need to install &lt;code&gt;qtdeclarative5-usermetrics0.1&lt;/code&gt; package on the desktop :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;$ sudo apt-get install qtdeclarative5-usermetrics0.1
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Apparmor Policy groups&lt;/h2&gt;
&lt;p&gt;Add the &lt;code&gt;usermetrics&lt;/code&gt; to your apparmor file :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;json&#34;&gt;{
    &amp;#34;policy_groups&amp;#34;: [
        ...
        &amp;#34;usermetrics&amp;#34;
    ],
    &amp;#34;policy_version&amp;#34;: 1.0
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;QML&lt;/h2&gt;
&lt;p&gt;First you need to import the &lt;code&gt;UserMetrics&lt;/code&gt; module :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;import UserMetrics 0.1
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Then create the metric(s) :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;Metric {
    /* Set a unique ID for each metric object you use so you can access it in your QML code. */
    id: gameMetric

    /* Set a unique name for each metric object, this is used for the storage of the metric data. */
    name: &amp;#34;game-metrics&amp;#34;

    /* This is the format for the plural case. */
    format: &amp;#34;%1 missions completed today&amp;#34;

    /* This is the format for no data for the day. */
    emptyFormat: &amp;#34;0 missions completed today&amp;#34;

    /* This is the gettext domain used for the localisation, you can use the applicationName. */
    domain: &amp;#34;com.ubuntu.developer.daker.mygame&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The Metric component provides two methods :&lt;/p&gt;

&lt;p&gt;— &lt;code&gt;increment(double amount = 1.0)&lt;/code&gt; : You can use this method if you want to increment metric by a specific amount ex: gameMetric.increment(3) or gameMetric.increment() to increment the metric by 1.&lt;br&gt;
— &lt;code&gt;update(double value)&lt;/code&gt; : You can use this method if you want to reset the metric and set a specific amount ex: gameMetric.update(5)&lt;/p&gt;

&lt;p&gt;The use of the Metric is not limited by the number.&lt;/p&gt;
</content>
            </entry>
            
        
            
            <entry>
                <title>Web Apps Remote Debugging on Ubuntu Touch</title>
                <link rel="alternate" href="http://daker.me/2013/11/web-apps-remote-debugging-on-ubuntu-touch.html" type="text/html" />
                <id>http://daker.me/2013/11/web-apps-remote-debugging-on-ubuntu-touch.html</id>
                <updated>2013-11-14T23:40:00Z</updated>

                <summary type="html">If you are writing Web Apps for &lt;a href=&#34;http://www.ubuntu.com/phone/install&#34;&gt;Ubuntu Touch&lt;/a&gt;, you might want to test them directly on the phone using the Ubuntu browser, this can be done by remotely debugging web pages using the built-in DevTools, which allow you to inspect, debug, and analyze the on-device experience with the full suite of tools you&amp;#39;re used to.</summary>
                <content type="html">&lt;p&gt;If you are writing Web Apps for &lt;a href=&#34;http://www.ubuntu.com/phone/install&#34;&gt;Ubuntu Touch&lt;/a&gt;, you might want to test them directly on the phone using the Ubuntu browser, this can be done by remotely debugging web pages using the built-in DevTools, which allow you to inspect, debug, and analyze the on-device experience with the full suite of tools you&amp;#39;re used to.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/utouch/3.png&#34; alt=&#34;Ubuntu Browser&#34;&gt;&lt;/p&gt;

&lt;p&gt;The phablet-team PPA has the tools and dependencies for 12.04, 12.10, 13.04 and 13.10 to get everything setup:&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;$ sudo add-apt-repository ppa:phablet-team/tools
$ sudo apt-get update
$ sudo apt-get install phablet-tools android-tools-adb android-tools-fastboot
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Plug the device via the USB cable, then run the following commands to connect to it through ADB&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;$ adb shell
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Switch to the phablet user :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;$ sudo -u phablet -i
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Take a note of your phone IP adresse :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;$ ifconfig wlan0 | grep &amp;#39;inet addr&amp;#39; | cut -d: -f2 | awk &amp;#39;{print $1}&amp;#39;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Once done launch the webbrowser app using :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;$ upstart-app-launch webbrowser-app --inspector
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;A browser instance will launch on the phone, point to URL of your webapp then access the Devtools with your Chrome/ium browser by opening &lt;code&gt;http://$YOUR-PHONE-IP:9221&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/utouch/4.png&#34; alt=&#34;DevTools&#34;&gt;&lt;/p&gt;

&lt;p&gt;The built-in Devtools is a bit old &amp;amp; slow so i am using the hosted version : &lt;code&gt;https://chrome-devtools-frontend.appspot.com/static/30.0.1599.118/devtools.html?ws=$YOUR-PHONE-IP:9221/devtools/page/$PAGE-ID&lt;/code&gt;, you can get the page id from &lt;code&gt;http://$YOUR-PHONE-IP:9221/pagelist.json&lt;/code&gt;&lt;/p&gt;
</content>
            </entry>
            
        
            
            <entry>
                <title>Ubuntu Touch User-Agent</title>
                <link rel="alternate" href="http://daker.me/2013/11/ubuntu-touch-user-agent.html" type="text/html" />
                <id>http://daker.me/2013/11/ubuntu-touch-user-agent.html</id>
                <updated>2013-11-06T19:00:00Z</updated>

                <summary type="html">With the launch of &lt;a href=&#34;http://www.ubuntu.com/phone/install&#34;&gt;Ubuntu Touch&lt;/a&gt; v1.0, the OS now ships its own QtWebKit based browser which will be replaced by &lt;a href=&#34;https://launchpad.net/oxide&#34;&gt;Oxide&lt;/a&gt; a Chromium-powered webview by 14.04. There has been a lot of &lt;a href=&#34;https://bugs.launchpad.net/webbrowser-app/+bug/1179596&#34;&gt;discussions&lt;/a&gt; arround the user-agent because many large sites(Facebook, Google, Twitter, Yahoo etc..) are sniffing the UA(for iPhone or Android tokens) to serve the mobile version of the site.</summary>
                <content type="html">&lt;p&gt;With the launch of &lt;a href=&#34;http://www.ubuntu.com/phone/install&#34;&gt;Ubuntu Touch&lt;/a&gt; v1.0, the OS now ships its own QtWebKit based browser which will be replaced by &lt;a href=&#34;https://launchpad.net/oxide&#34;&gt;Oxide&lt;/a&gt; a Chromium-powered webview by 14.04. There has been a lot of &lt;a href=&#34;https://bugs.launchpad.net/webbrowser-app/+bug/1179596&#34;&gt;discussions&lt;/a&gt; arround the user-agent because many large sites(Facebook, Google, Twitter, Yahoo etc..) are sniffing the UA(for iPhone or Android tokens) to serve the mobile version of the site.&lt;/p&gt;

&lt;p&gt;Adding an Android or iPhone token will lead to unwanted behaviours, like showing ads for the Android app or even trying to open the Google Play app or the Youtube app. The browser now reports it in the following formats, depending on whether the device is a phone or a tablet, with the addition of an &lt;a href=&#34;https://bazaar.launchpad.net/%7Ephablet-team/webbrowser-app/trunk/view/head:/src/Ubuntu/Components/Extras/Browser/ua-overrides.js&#34;&gt;override mechanism&lt;/a&gt; that will override the UA on the fly and the site will serve us a proper mobile content.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/utouch/1.png&#34; alt=&#34;Facebook Android Ads&#34;&gt;&lt;/p&gt;
&lt;h2&gt;Phone&lt;/h2&gt;&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;Mozilla/5.0 (Ubuntu; Mobile) WebKit/537.21
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Tablet&lt;/h2&gt;&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;Mozilla/5.0 (Ubuntu; Tablet) WebKit/537.21
&lt;/code&gt;&lt;/pre&gt;&lt;h2&gt;Pattern&lt;/h2&gt;&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;Mozilla/5.0 (Ubuntu; $FormFactor) WebKit/$WebKitRev
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;You can also get it through JavaScript using the &lt;code&gt;navigator.userAgent&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/utouch/2.png&#34; alt=&#34;Using the console&#34;&gt;&lt;/p&gt;

&lt;p&gt;So if you are doing UA sniffing it&amp;#39;s really better to look for &amp;quot;Mobile&amp;quot; rather than looking the OS identifier.&lt;/p&gt;
</content>
            </entry>
            
        
            
            <entry>
                <title>Package your Webapp for Ubuntu Touch</title>
                <link rel="alternate" href="http://daker.me/2013/10/package-your-webapp-for-ubuntu-touch.html" type="text/html" />
                <id>http://daker.me/2013/10/package-your-webapp-for-ubuntu-touch.html</id>
                <updated>2013-10-15T23:50:00Z</updated>

                <summary type="html">Last week i discovered a HTML5 game called &amp;#39;&lt;a href=&#34;http://phoboslab.org/xtype/&#34;&gt;X-Type&lt;/a&gt;&amp;#39;, which is basically a free dual stick shooter with endless boss battles. Unfortunately this game does only work on iOS and Android and it does use the UA sniffing mechanism to serve both desktop and mobile versions, and using the Ubuntu Touch user-agent it will only serve the desktop version which will not work on the phone.</summary>
                <content type="html">&lt;p&gt;Last week i discovered a HTML5 game called &amp;#39;&lt;a href=&#34;http://phoboslab.org/xtype/&#34;&gt;X-Type&lt;/a&gt;&amp;#39;, which is basically a free dual stick shooter with endless boss battles. Unfortunately this game does only work on iOS and Android and it does use the UA sniffing mechanism to serve both desktop and mobile versions, and using the Ubuntu Touch user-agent it will only serve the desktop version which will not work on the phone.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://daker.me/assets/posts/xtype/xtype.png&#34; alt=&#34;X-Type running on Ubuntu Touch&#34;&gt;&lt;/p&gt;

&lt;p&gt;First using the Qt Creator you have to create a &amp;quot;HTML5 Touch UI&amp;quot; project which will produce the following QML code :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;js&#34;&gt;import QtQuick 2.0
import Ubuntu.Components 0.1
import QtWebKit 3.0

MainView {
    objectName: &amp;#34;mainView&amp;#34;
    applicationName: &amp;#34;com.ubuntu.developer.daker.x-type&amp;#34;
    automaticOrientation: true

    width: units.gu(100)
    height: units.gu(75)

    Flickable {
        id: webViewFlickable
        anchors.fill: parent

        WebView {
            id: webView
            anchors.fill: parent
            url: &amp;#34;http://phoboslab.org/xtype/&amp;#34;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;The problem with using the QtWebKit Webview is that the device-pixel-ratio (DPR) is not set automatically causing the content of the Webview to not scale correctly, so you&amp;#39;ll need to get the corresponding value for your device from the &lt;code&gt;QTWEBKIT_DPR&lt;/code&gt; environment variable, there is actually no way to read those variables using QML so you&amp;#39;ll need to use some C++ code to read the &lt;code&gt;QTWEBKIT_DPR&lt;/code&gt; and passe it to QML so the content of the WebView will scale accordingly.&lt;/p&gt;

&lt;p&gt;The Ubuntu Touch Browser Plugin provides a component called &lt;code&gt;UbuntuWebView&lt;/code&gt;, it uses some kind of UA overrides to bypass the UA sniffing used to serve the mobile version of webapp(Gmail, G+, Facebook, Twitter, etc...) and changes the UA on the fly, unfortunately there was no way to set your own UA using the &lt;code&gt;UbuntuWebView&lt;/code&gt; but now you can since this &lt;a href=&#34;https://bugs.launchpad.net/webbrowser-app/+bug/1237365&#34;&gt;bug #1237365&lt;/a&gt; has been fixed.&lt;/p&gt;

&lt;p&gt;Also with the &lt;code&gt;UbuntuWebView&lt;/code&gt; the &lt;code&gt;DPR&lt;/code&gt; weren&amp;#39;t set automatically(&lt;a href=&#34;https://bugs.launchpad.net/webbrowser-app/+bug/1237348&#34;&gt;bug #1237348&lt;/a&gt;), it was also fixed and all those fixes has been shipped with image #96.&lt;/p&gt;

&lt;p&gt;Here is the QML code i used to embed the &amp;quot;X-Type&amp;quot; game(Fullscreen) but first you need to install the browser plugin :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;sh&#34;&gt;$ sudo apt-get install qtdeclarative5-ubuntu-ui-extras-browser-plugin
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code data-language=&#34;js&#34;&gt;import QtQuick 2.0
import Ubuntu.Components 0.1
import Ubuntu.Components.Extras.Browser 0.1


MainView {
    objectName: &amp;#34;mainView&amp;#34;
    applicationName: &amp;#34;com.ubuntu.developer.daker.x-type&amp;#34;
    //automaticOrientation: true

    width: units.gu(50)
    height: units.gu(75)

    UbuntuWebView {
        anchors.fill: parent
        url: &amp;#34;http://phoboslab.org/xtype/&amp;#34;
        /* This function is used to override the UA */
        function getUAString(url) {
            return &amp;#34;Mozilla/5.0 (iPhone; CPU iPhone OS 5_0 like Mac OS X) AppleWebKit/534.46 (KHTML, like Gecko) Version/5.1 Mobile/9A334 Safari/7534.48.3&amp;#34;
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you need to create a &lt;code&gt;manifest.json&lt;/code&gt; file :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;json&#34;&gt;{
    &amp;#34;description&amp;#34;: &amp;#34;A Free HTML5 Dual Stick Shooter&amp;#34;,
    &amp;#34;framework&amp;#34;: &amp;#34;ubuntu-sdk-13.10&amp;#34;,
    &amp;#34;architecture&amp;#34;: &amp;#34;all&amp;#34;,
    &amp;#34;hooks&amp;#34;: {
        &amp;#34;x-type&amp;#34;: {
            &amp;#34;apparmor&amp;#34;: &amp;#34;x-type.json&amp;#34;,
            &amp;#34;desktop&amp;#34;: &amp;#34;x-type.desktop&amp;#34;
        }
    },
    &amp;#34;maintainer&amp;#34;: &amp;#34;Adnane Belmadiaf &amp;lt;daker@ubuntu.com&amp;gt;&amp;#34;,
    &amp;#34;name&amp;#34;: &amp;#34;com.ubuntu.developer.daker.x-type&amp;#34;,
    &amp;#34;title&amp;#34;: &amp;#34;X-Type&amp;#34;,
    &amp;#34;version&amp;#34;: &amp;#34;0.4&amp;#34;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;the security policy groups &lt;code&gt;x-type.json&lt;/code&gt; :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;json&#34;&gt;{
    &amp;#34;policy_groups&amp;#34;: [
        &amp;#34;networking&amp;#34;
    ],
    &amp;#34;policy_version&amp;#34;: 1
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;and a .desktop file :&lt;/p&gt;
&lt;pre&gt;&lt;code data-language=&#34;js&#34;&gt;[Desktop Entry]
Name=x-type
Comment=A Free HTML5 Dual Stick Shooter
Exec=qmlscene $@ x-type.qml
Icon=./x-type.png
Terminal=false
Type=Application
X-Ubuntu-Touch=true
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;you need to add the icon and now all you have to do is to build the click package using &lt;code&gt;click build .&lt;/code&gt;and &lt;a href=&#34;https://myapps.developer.ubuntu.com/dev/click-apps/new/&#34;&gt;upload&lt;/a&gt; it to the store. I have also packaged another HTML5 game called &lt;a href=&#34;http://heliom.github.io/bytesjack/&#34;&gt;BytesJack&lt;/a&gt; using the same method, the source code of both games can be found &lt;a href=&#34;https://bazaar.launchpad.net/%7Edaker/+junk/x-type/files&#34;&gt;here&lt;/a&gt; and &lt;a href=&#34;https://bazaar.launchpad.net/%7Edaker/+junk/bytesjack/files&#34;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Happy hacking!&lt;/p&gt;
</content>
            </entry>
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
            
        
    </feed>
